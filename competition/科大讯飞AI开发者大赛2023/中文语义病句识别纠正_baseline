- 赛题名称：中文语义病句识别纠正
- 赛题类型：病句识别、错词纠正
- 赛题报名链接👇：

https://challenge.xfyun.cn/topic/info?type=identification-and-correction&ch=vWxQGFU

## 赛题背景

近年来随着自媒体热潮的掀起，人人都是信息的生产者，互联网上文本错误的内容暴增，如何避免这些文本错误，成为了人们迫切关注的问题。因此，各大有关文本校对的比赛相拥而至。

然而，过往的文本错误主要针对拼写错误和语法错误，这些错误对于人类来说相对简单，往往是由外国语言学习者和中文母语写作者的疏忽而产生的。对于出版、教育等一些对深层次的中文语义错误识别有需求的行业，中文语义病句的识别将会有更大的帮助。

语义病句经常出现在初高中的语文考试题目中，用来衡量学生对语文知识的掌握程度，这类语义病句对于学生来说是比较困难的，对于研究也有重大意义。


## 赛事任务

本赛事包含两个任务，分别是：中文语义病句识别和中文语义病句纠正。中文语义病句识别是一个二分类的问题，预测句子是否是语义病句。中文语义病句纠正任务需要针对病句给出纠正后的句子。语义错误和拼写错误、语法错误不同，语义错误更加关注句子语义层面的合法性，语义病句例子如下表所示。

| 病句                                     | 纠正后的句子                             |
| ---------------------------------------- | ---------------------------------------- |
| 英法联军**烧毁并洗劫**了北京圆明园。     | 英法联军**洗劫并烧毁**了北京圆明园。     |
| 山上的水宝贵，把它留给**晚上来**的人喝。 | 山上的水宝贵，把它留给**上来晚**的人喝。 |
| 国内彩电**市场**严重**滞销**。           | 国内彩电严重**滞销**。                   |


## 赛题数据
本次比赛使用的数据一部分来自网络上的中小学病句题库，一部分来自人工标注。每条数据包括句子id、句子标签（0：正确句子/1：病句）、原始句子、纠正后的句子。数据格式示例如下表所示：

| id   | 标签 | 原始句子                             | 纠正后的句子                         |
| ---- | ---- | ------------------------------------ | ------------------------------------ |
| 1    | 1    | 英法联军烧毁并洗劫了北京圆明园。     | 英法联军洗劫并烧毁了北京圆明园。     |
| 2    | 1    | 山上的水宝贵，把它留给晚上来的人喝。 | 山上的水宝贵，把它留给上来晚的人喝。 |
| 3    | 0    | 国内彩电严重滞销。                   | 国内彩电严重滞销。                   |

## 评估指标
- 中文语义病句识别任务

本模型依据提交的结果文件，采用针对语义病句的F1-score进行评价。

- 中文语义病句纠正任务

本任务采用ChERRANT（Chinese ERRANT）中文GEC评估工具。ChERRANT的主要功能是通过对比预测编辑和标准编辑，计算预测结果的精确度、召回度、F值指标，从而评估语法纠错模型的性能。

## 解题思路

赛题本质是错词纠正任务，需要使用错词纠正的模型进行训练和预测。这里给出一种简单的思路，使用`t5`进行错词纠正。

### 步骤1：配置pycorrector

`pycorrector`自带有`t5`预训练的错词纠正模型，首选需要配置如下库：

```
torch
transformers
datasets
loguru
```

接下来下载`pycorrector`代码：

```
https://github.com/shibing624/pycorrector
```

### 步骤2：定义数据集

将比赛数据集转换为tsv格式，为【原始句子】 + 【\t】 + 【正确句子的格式】。每一行为一条训练样本。

```
你说的是对，跟那些失业的人比起来你也算是辛运的。	你说的是对，跟那些失业的人比起来你也算是幸运的。
```

### 步骤3：模型训练


根据自己的GPU大小，修改batch size。

https://github.com/shibing624/pycorrector/blob/master/pycorrector/t5/train.py

命令行运行进行训练：

```
python train.py --do_train --train_path ../../../train.tsv
```

### 步骤4：模型预测与提交

修改预测代码中的模型加载路径，传入待预测句子。最终将生成的结果写为指定json的格式，然后提交。


https://github.com/shibing624/pycorrector/blob/master/pycorrector/t5/t5_corrector.py

```
python3.9 t5_corrector.py
```

这种思路的分数有31分左右，还有很大的提高空间。比如交叉训练、预训练，或者使用ChatGLM进行尝试。


方案开源地址：

https://github.com/datawhalechina/competition-baseline/tree/master/competition/%E7%A7%91%E5%A4%A7%E8%AE%AF%E9%A3%9EAI%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%A7%E8%B5%9B2023
